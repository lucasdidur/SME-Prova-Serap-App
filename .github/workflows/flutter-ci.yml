name: Flutter CI

# This workflow is triggered on pushes to the repository.

on:
  push:
    branches:
    - development
    
env:
  flutter_version: "2.10.4"
  java_version: "11"

    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: ${{ env.java_version }}

    - name: Setup flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.flutter_version }}
        cache: true

    - name: Cache pubspec dependencies
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.FLUTTER_HOME }}/.pub-cache
          **/.packages
          **/.flutter-plugins
          **/.flutter-plugin-dependencies
          **/.dart_tool/package_config.json
        key: build-pubspec-${{ hashFiles('**/pubspec.lock') }}
        restore-keys: |
          build-pubspec-

    - name: Cache build runner
      uses: actions/cache@v3
      with:
        path: |
          **/.dart_tool
          **/*.g.dart
          **/*.mocks.dart
          **/*.config.dart
        key: build-runner-${{ hashFiles('**/asset_graph.json', '**/*.dart', '**/pubspec.lock', '**/outputs.json') }}
        restore-keys: |
          build-runner-

    - name: Caching Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Setup environment variables
      uses: noliran/branch-based-secrets@v1
      with:
        secrets: APP_CONFIG,GOOGLE_SERVICES,

    - name: Setup configurations
      env: # Ou como uma variÃ¡vel de ambiente
        APP_CONFIG: ${{ secrets[env.APP_CONFIG_NAME] }}
        GOOGLE_SERVICES: ${{ secrets[env.GOOGLE_SERVICES_NAME] }}
      run: |
        mkdir -p config && echo $APP_CONFIG > config/app_config.json
        echo $GOOGLE_SERVICES > android/app/google-services.json

    - name: Setup Android keystore
      id: android_keystore
      uses: timheuer/base64-to-file@v1.1
      with:
        fileName: key.jks
        fileDir: './android/app/'
        encodedString: ${{ secrets.KEY_JKS }}

    - name: Creating key.properties
      run: |
        echo "storeFile=key.jks\n" > android/key.properties
        echo "storePassword=${{ secrets.KEY_PASSWORD }}\n" >> android/key.properties
        echo "keyAlias=${{ secrets.KEY_ALIAS }}\n" >> android/key.properties      
        echo "keyPassword=${{ secrets.KEY_ALIAS_PASSWORD }}\n" >> android/key.properties

    - name: Install dependencies
      run: flutter pub get

    - name: Build apk
      run: flutter build apk --release
    
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk
